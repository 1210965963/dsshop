{"version":3,"file":"pages/pass/js/login.js","sources":["webpack:///./api/sweepLogin.js","webpack:///./pages/pass/js/login.js"],"sourcesContent":["import request from '@/plugins/request'\r\nimport Qs from 'qs'\r\nexport function code() {\r\n  return request({\r\n    url: 'sweepLogin',\r\n    method: 'GET'\r\n  })\r\n}\r\nexport function verify(data) {\r\n  data = Qs.parse(data)\r\n  return request({\r\n    url: 'sweepLogin/verify',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\nexport function index(data) {\r\n  data = Qs.parse(data)\r\n  return request({\r\n    url: 'sweepLogin',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\n","import {login} from '@/api/login'\nimport {code, verify, index} from '@/api/sweepLogin'\nimport {verifyPlugin} from '@/api/plugin'\nimport {\n  mapMutations\n} from 'vuex';\nexport default {\n  layout: 'login',\n  head () {\n    return {\n      title: '登录' + '-' + process.env.APP_NAME\n    }\n  },\n  async asyncData (ctx) {\n    try {\n      let isSweepLogin = false\n      await verifyPlugin('sweepLogin').then(response => {\n        isSweepLogin = response.sweepLogin\n      })\n      return {\n        isSweepLogin: isSweepLogin\n      }\n    } catch(err) {\n      ctx.$errorHandler(err)\n    }\n  },\n  data() {\n    const validateCellphone = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入手机号'));\n      } else {\n        const myreg = /^1[3456789]\\d{9}$/;\n        if (!myreg.test(value)) {\n          callback(new Error('手机号格式有误'));\n        }\n        callback();\n      }\n    };\n    return {\n      isSweepLogin: false,\n      method: 1,\n      codeLoading: false,\n      codeImg: '',\n      codeTimer: null,\n      codeState: 0,\n      codeTime: 0,\n      codeUuid: 0,\n      ruleForm: {\n        cellphone: '',\n        password: '',\n        remember: false\n      },\n      loading: false,\n      rules: {\n        cellphone: [\n          { validator: validateCellphone, trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 5, message: '密码长度必须大于5位', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.codeTimer)\n  },\n  methods: {\n    ...mapMutations(['login']),\n    setMethod(index){\n      this.method = index\n      if(index === 2){\n        this.getCode()\n      }\n    },\n    // 获取二维码\n    getCode(){\n      this.codeLoading = true\n      this.codeState = 0\n      if(this.codeTimer){\n        clearInterval(this.codeTimer);\n      }\n      code().then(response => {\n        this.codeImg = response.code\n        this.codeTime = response.expires_in\n        this.codeUuid = response.uuid\n        this.codeTimer = setInterval(this.getRefreshCode, 2000);\n      }).finally(() => {\n        this.codeLoading = false\n      })\n    },\n    // 刷新登录状态\n    getRefreshCode(){\n      this.codeTime = this.codeTime-1\n      if (this.codeTime === 0) {\n        clearInterval(this.codeTimer);\n        this.codeState = 4\n      } else {\n        verify({uuid: this.codeUuid}).then(response => {\n          this.codeState = response.state\n          if(this.codeState !== 0 && this.codeState !== 1){\n            clearInterval(this.codeTimer);\n          }\n          if(this.codeState === 2){\n            index({\n              uuid: this.codeUuid\n            }).then(response => {\n              this.login(response);\n              this.$message({\n                message: '登录成功',\n                type: 'success'\n              });\n              this.loading = false;\n              const route = this.store.get('route');\n              if(route){\n                this.store.remove('route');\n                this.$router.replace({ path: route.path, query: route.query })\n              }else{\n                $nuxt.$router.replace('/user/portal')\n              }\n            }).catch(() => {\n              this.loading = false\n            })\n          }\n        })\n      }\n\n    },\n    toLogin(){\n      this.$refs['ruleForm'].validate((valid) => {\n        if (valid) {\n          this.loading = true;\n          login(this.ruleForm).then(response => {\n            response.remember = this.ruleForm.remember\n            this.login(response);\n            this.$message({\n              message: '登录成功',\n              type: 'success'\n            });\n            this.loading = false;\n            const route = this.store.get('route');\n            if(route){\n              this.store.remove('route');\n              this.$router.replace({ path: route.path, query: route.query })\n            }else{\n              $nuxt.$router.replace('/user/portal')\n            }\n          }).catch(() => {\n            this.loading = false\n          })\n        }\n      })\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;ACvBA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AAfA;AAyBA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtFA;AA7DA;;;;A","sourceRoot":""}
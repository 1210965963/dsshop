{"version":3,"file":"pages/user/js/cellphone.js","sources":["webpack:///./pages/user/js/cellphone.js"],"sourcesContent":["import {detail} from '@/api/user'\nimport { changeCellphone, cellphoneCode } from '@/api/login'\nexport default {\n  layout: 'user',\n  head () {\n    return {\n      title: `${this.$t('user.cellphone')}-${this.$t('header.top.personal_center')}`,\n    }\n  },\n  data() {\n    const validateCellphone = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error(this.$t('hint.error.import', {attribute: this.$t('find_password.cellphone')})));\n      } else {\n        const myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(16[0-9]{1})|(18[0-9]{1})|(17[0-9]{1}))+\\d{8})$/;\n        if (!myreg.test(value)) {\n          callback(new Error(this.$t('hint.error.wrong_format', {attribute: this.$t('find_password.cellphone')})));\n        }\n        callback();\n      }\n    };\n    return {\n      buttonLoading: false,\n      loading: true,\n      disabled: false,\n      codename:this.$t('find_password.get_code'),\n      seconds: '',\n      cellphone: '',\n      unit: '',\n      user: {},\n      ruleForm: {\n        cellphone: '',\n        code: '',\n        state: 2\n      },\n      rules: {\n        cellphone: [\n          { required: true, message: this.$t('hint.error.import', {attribute: this.$t('cellphone.new')}), trigger: 'blur' },\n          { validator: validateCellphone, trigger: 'blur' }\n        ],\n        code: [\n          { required: true, message: this.$t('hint.error.import', {attribute: this.$t('find_password.verification_code')}), trigger: 'blur' },\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.getUser()\n  },\n  methods: {\n    async getUser(){\n      await Promise.all([\n        detail(this.listQuery)\n      ]).then(([userData]) => {\n        this.user = userData;\n        this.cellphone = JSON.parse(JSON.stringify(userData.cellphone));\n        this.loading = false\n      }).catch((error) => {\n        this.loading = false\n      })\n    },\n    // 获取验证码\n    getCode(){\n      const that = this;\n      this.buttonLoading = true;\n      cellphoneCode(this.ruleForm).then(response => {\n        // 开始倒计时\n        this.seconds = 60;\n        this.codename = '';\n        this.unit = 's';\n        this.disabled = true;\n        this.buttonLoading = false;\n        this.timer = setInterval(function () {\n          that.seconds = that.seconds - 1;\n          if (that.seconds === 0) {\n            // 读秒结束 清空计时器\n            clearInterval(that.timer);\n            that.seconds = '';\n            that.codename = this.$t('find_password.get_code');\n            that.unit = '';\n            that.codeDisabled = false\n          }\n        }, 1000);\n        // 模拟验证码发送\n        if(response.code){\n          that.ruleForm.code = response.code\n        }\n      }).catch(() => {\n        this.buttonLoading = false\n      })\n    },\n    submitForm(){\n      this.$refs['ruleForm'].validate((valid) => {\n        if (valid) {\n          this.loading = true;\n          this.buttonLoading = true;\n          changeCellphone(this.ruleForm).then(response => {\n            this.loading = false;\n            this.buttonLoading = false;\n            this.getUser();\n            this.$refs['ruleForm'].resetFields();\n            this.$message({\n              message: this.$t('common.success'),\n              type: 'success'\n            });\n          }).catch(() => {\n            this.loading = false;\n            this.buttonLoading = false\n          })\n        }\n      })\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}
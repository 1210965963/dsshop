{"version":3,"file":"pages/user/js/userinfo.js","sources":["webpack:///./api/user.js","webpack:///./pages/user/js/userinfo.js"],"sourcesContent":["import request from '@/plugins/request'\r\nimport Qs from 'qs'\r\nexport function detail() {\r\n  return request({\r\n    url: 'user',\r\n    method: 'GET'\r\n  })\r\n}\r\nexport function edit(data) {\r\n  data = Qs.parse(data)\r\n  return request({\r\n    url: 'user',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\nexport function cancel(data) {\r\n  data = Qs.parse(data)\r\n  return request({\r\n    url: 'cancel',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\n","import {detail, edit} from '@/api/user'\r\nimport { emailCode,verifyEmail } from '@/api/login'\r\nimport { getToken } from '@/plugins/auth'\r\nexport default {\r\n  layout: 'user',\r\n  head () {\r\n    return {\r\n      title: '个人资料-个人中心',\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      disabled: false,\r\n      codename:'获取验证码',\r\n      seconds: '',\r\n      unit: '',\r\n      uploadFile:{\r\n        url: process.env.API_URL + 'uploadPictures',\r\n        header: {\r\n          'apply-secret': process.env.PROJECT_KEY,\r\n          'Authorization': 'Bearer ' + getToken('token')\r\n        },\r\n        data: {\r\n          type: 1,\r\n          size: 1024 * 1024 * 2\r\n        }\r\n      },\r\n      loading: true,\r\n      buttonLoading: false,\r\n      centerDialogVisible: false,\r\n      imgProgressPercent: 0,\r\n      imgProgress: false,\r\n      dialogType: '',\r\n      dialogTitle: '',\r\n      ruleForm: {},\r\n      user: {},\r\n      collectList: [],\r\n      rules: {\r\n        portrait: [\r\n          { required: true, message: '请上传头像', trigger: 'blur' }\r\n        ],\r\n        nickname: [\r\n          { required: true, message: '请设置昵称', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请设置邮箱', trigger: 'blur' },\r\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n        ],\r\n        code: [\r\n          { required: true, message: '请输入验证码', trigger: 'blur' },\r\n          { type: 'number', message: '验证码必须为数字'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getUser()\r\n  },\r\n  methods: {\r\n    async getUser(){\r\n      await Promise.all([\r\n        detail(this.listQuery)\r\n      ]).then(([userData]) => {\r\n        this.user = userData;\r\n        this.loading = false\r\n      }).catch((error) => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    submitForm(){\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if (valid) {\r\n          this.buttonLoading = true;\r\n          if(this.dialogType === 'email'){\r\n            verifyEmail(this.ruleForm).then(response => {\r\n              this.buttonLoading = false;\r\n              this.centerDialogVisible = false;\r\n              this.getUser();\r\n              this.$message({\r\n                message: '保存成功',\r\n                type: 'success'\r\n              });\r\n            }).catch(() => {\r\n              this.buttonLoading = false\r\n            })\r\n          }else{\r\n            edit(this.ruleForm).then(response => {\r\n              this.buttonLoading = false;\r\n              this.centerDialogVisible = false;\r\n              this.getUser();\r\n              this.$message({\r\n                message: '保存成功',\r\n                type: 'success'\r\n              });\r\n            }).catch(() => {\r\n              this.buttonLoading = false\r\n            })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    modification(type){\r\n      this.centerDialogVisible = true\r\n      this.dialogType= type;\r\n\r\n      switch (type) {\r\n        case 'portrait':\r\n          this.dialogTitle = '修改头像';\r\n          this.ruleForm = {\r\n            portrait: this.user.portrait\r\n          };\r\n          break;\r\n        case 'nickname':\r\n          this.dialogTitle = '修改昵称';\r\n          this.ruleForm = {\r\n            nickname: this.user.nickname\r\n          };\r\n          break;\r\n        case 'email':\r\n          this.dialogTitle = '修改邮箱';\r\n          this.ruleForm = {\r\n            email: this.user.email,\r\n            code: ''\r\n          };\r\n          break\r\n      }\r\n    },\r\n    handleAvatarSuccess(res, file) {\r\n      this.ruleForm.portrait = file.response;\r\n      this.imgProgress = false;\r\n      this.imgProgressPercent = 0\r\n    },\r\n    // 上传时\r\n    handleProgress(file, fileList) {\r\n      this.imgProgressPercent = file.percent\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n      if (\r\n        ['image/jpeg',\r\n          'image/gif',\r\n          'image/png',\r\n          'image/bmp'\r\n        ].indexOf(file.type) === -1) {\r\n        this.$message.error('请上传正确的图片格式');\r\n        return false\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!')\r\n      }\r\n      this.imgProgress = true;\r\n      return isLt2M\r\n    },\r\n    // 获取验证码\r\n    getCode(){\r\n      const that = this;\r\n      this.buttonLoading = true;\r\n      emailCode(this.ruleForm).then(response => {\r\n        // 开始倒计时\r\n        this.seconds = 60;\r\n        this.codename = '';\r\n        this.unit = 's';\r\n        this.disabled = true;\r\n        this.buttonLoading = false;\r\n        this.timer = setInterval(function () {\r\n          that.seconds = that.seconds - 1;\r\n          if (that.seconds === 0) {\r\n            // 读秒结束 清空计时器\r\n            clearInterval(that.timer);\r\n            that.seconds = '';\r\n            that.codename = '获取验证码';\r\n            that.unit = '';\r\n            that.disabled = false\r\n          }\r\n        }, 1000);\r\n        // 模拟验证码发送\r\n        if(response.code){\r\n          that.ruleForm.code = response.code\r\n        }\r\n      }).catch(() => {\r\n        this.buttonLoading = false\r\n      })\r\n    },\r\n  }\r\n}\r\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAbA;AA1BA;AA2CA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAnBA;AAqBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7HA;AAvDA;;;;A","sourceRoot":""}
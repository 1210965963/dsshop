{"version":3,"file":"pages/user/js/userinfo.js","sources":["webpack:///./pages/user/js/userinfo.js"],"sourcesContent":["import {detail, edit} from '@/api/user'\nimport { emailCode,verifyEmail } from '@/api/login'\nimport { getToken } from '@/plugins/auth'\nexport default {\n  layout: 'user',\n  head () {\n    return {\n      title: `${this.$t('user.info')}-${this.$t('header.top.personal_center')}`,\n    }\n  },\n  data() {\n    return {\n      disabled: false,\n      codename:this.$t('find_password.get_code'),\n      seconds: '',\n      unit: '',\n      uploadFile:{\n        url: process.env.API_URL + 'uploadPictures',\n        header: {\n          'apply-secret': process.env.PROJECT_KEY,\n          'Authorization': 'Bearer ' + getToken('token')\n        },\n        data: {\n          type: 1,\n          size: 1024 * 1024 * 2\n        }\n      },\n      loading: true,\n      buttonLoading: false,\n      centerDialogVisible: false,\n      imgProgressPercent: 0,\n      imgProgress: false,\n      dialogType: '',\n      dialogTitle: '',\n      ruleForm: {},\n      user: {},\n      collectList: [],\n      rules: {\n        portrait: [\n          { required: true, message: this.$t('userinfo.portrait'), trigger: 'blur' }\n        ],\n        nickname: [\n          { required: true, message: this.$t('hint.error.import', {attribute: this.$t('userinfo.nickname')}), trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: this.$t('hint.error.import', {attribute: this.$t('userinfo.email')}), trigger: 'blur' },\n          { type: 'email', message: this.$t('hint.error.wrong_format', {attribute: this.$t('userinfo.email')}), trigger: ['blur', 'change'] }\n        ],\n        code: [\n          { required: true, message: this.$t('hint.error.import', {attribute: this.$t('find_password.verification_code')}), trigger: 'blur' },\n          { type: 'number', message: this.$t('find_password.verification_code.number', {attribute: this.$t('find_password.verification_code')})}\n        ],\n      }\n    }\n  },\n  mounted() {\n    this.getUser()\n  },\n  methods: {\n    async getUser(){\n      await Promise.all([\n        detail(this.listQuery)\n      ]).then(([userData]) => {\n        this.user = userData;\n        this.loading = false\n      }).catch((error) => {\n        this.loading = false\n      })\n    },\n    submitForm(){\n      this.$refs['ruleForm'].validate((valid) => {\n        if (valid) {\n          this.buttonLoading = true;\n          if(this.dialogType === 'email'){\n            verifyEmail(this.ruleForm).then(response => {\n              this.buttonLoading = false;\n              this.centerDialogVisible = false;\n              this.getUser();\n              this.$message({\n                message: this.$t('common.success'),\n                type: 'success'\n              });\n            }).catch(() => {\n              this.buttonLoading = false\n            })\n          }else{\n            edit(this.ruleForm).then(response => {\n              this.buttonLoading = false;\n              this.centerDialogVisible = false;\n              this.getUser();\n              this.$message({\n                message: this.$t('common.success'),\n                type: 'success'\n              });\n            }).catch(() => {\n              this.buttonLoading = false\n            })\n          }\n        }\n      })\n    },\n    modification(type){\n      this.centerDialogVisible = true\n      this.dialogType= type;\n\n      switch (type) {\n        case 'portrait':\n          this.dialogTitle = this.$t('userinfo.amend_portrait');\n          this.ruleForm = {\n            portrait: this.user.portrait\n          };\n          break;\n        case 'nickname':\n          this.dialogTitle = this.$t('userinfo.amend_nickname');\n          this.ruleForm = {\n            nickname: this.user.nickname\n          };\n          break;\n        case 'email':\n          this.dialogTitle = this.$t('userinfo.amend_email');\n          this.ruleForm = {\n            email: this.user.email,\n            code: ''\n          };\n          break\n      }\n    },\n    handleAvatarSuccess(res, file) {\n      this.ruleForm.portrait = file.response;\n      this.imgProgress = false;\n      this.imgProgressPercent = 0\n    },\n    // 上传时\n    handleProgress(file, fileList) {\n      this.imgProgressPercent = file.percent\n    },\n    beforeAvatarUpload(file) {\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (\n        ['image/jpeg',\n          'image/gif',\n          'image/png',\n          'image/bmp'\n        ].indexOf(file.type) === -1) {\n        this.$message.error(this.$t('userinfo.error.image'));\n        return false\n      }\n      if (!isLt2M) {\n        this.$message.error(this.$t('userinfo.error.image.size'))\n      }\n      this.imgProgress = true;\n      return isLt2M\n    },\n    // 获取验证码\n    getCode(){\n      const that = this;\n      this.buttonLoading = true;\n      emailCode(this.ruleForm).then(response => {\n        // 开始倒计时\n        this.seconds = 60;\n        this.codename = '';\n        this.unit = 's';\n        this.disabled = true;\n        this.buttonLoading = false;\n        this.timer = setInterval(function () {\n          that.seconds = that.seconds - 1;\n          if (that.seconds === 0) {\n            // 读秒结束 清空计时器\n            clearInterval(that.timer);\n            that.seconds = '';\n            that.codename = this.$t('find_password.get_code');\n            that.unit = '';\n            that.disabled = false\n          }\n        }, 1000);\n        // 模拟验证码发送\n        if(response.code){\n          that.ruleForm.code = response.code\n        }\n      }).catch(() => {\n        this.buttonLoading = false\n      })\n    },\n  }\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}
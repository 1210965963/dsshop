{"version":3,"file":"pages/user/notice/js/list.js","sources":["webpack:///./api/notification.js","webpack:///./pages/user/notice/js/list.js"],"sourcesContent":["import request from '@/plugins/request'\r\nimport Qs from 'qs'\r\nexport function getList(query) {\r\n  return request({\r\n    url: 'notification',\r\n    method: 'GET',\r\n    params: query\r\n  })\r\n}\r\nexport function detail(id) {\r\n  return request({\r\n    url: 'notification/detail/' + id,\r\n    method: 'GET'\r\n  })\r\n}\r\nexport function unread(query) {\r\n  return request({\r\n    url: 'notification/unread',\r\n    method: 'GET',\r\n    params: query\r\n  })\r\n}\r\nexport function read(data) {\r\n  data = Qs.parse(data)\r\n  return request({\r\n    url: 'notification/read/0',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\nexport function destroy(data) {\r\n  data = Qs.parse(data)\r\n  return request({\r\n    url: 'notification/destroy/0',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\n","import {getList, destroy, read} from '@/api/notification'\r\nexport default {\r\n  layout: 'user',\r\n  head () {\r\n    return {\r\n      title: '消息通知-个人中心',\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      tableLoading: false,\r\n      checkboxAll: false,\r\n      loading: true,\r\n      buttonLoading: false,\r\n      noticeList: [],\r\n      total: 0,\r\n      listQuery: {\r\n        limit: 10,\r\n        page: 1,\r\n        sort: '-created_at',\r\n        pc: true\r\n      },\r\n      multipleSelection: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    async getList(){\r\n      this.tableLoading = true;\r\n      await Promise.all([\r\n        getList(this.listQuery)\r\n      ]).then(([notificationData]) => {\r\n        this.noticeList = notificationData.data;\r\n        this.total = notificationData.total;\r\n        this.loading = false;\r\n        this.tableLoading = false\r\n      }).catch((error) => {\r\n        this.loading = false;\r\n        this.tableLoading = false\r\n      })\r\n    },\r\n    handleCheckAllChange() {\r\n      this.$refs.table.toggleAllSelection()\r\n    },\r\n    handleSelectionChange(val){\r\n      this.multipleSelection = val\r\n    },\r\n    handleAllDelete() { // 批量删除\r\n      if(this.multipleSelection.length === 0){\r\n        this.$message({\r\n          message: '请选择需要操作的内容',\r\n          type: 'error'\r\n        });\r\n        return false\r\n      }\r\n      this.$confirm('是否确认删除选中内容？', '提示', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.buttonLoading = true;\r\n        destroy(this.multipleSelection).then(response => {\r\n          this.buttonLoading = false;\r\n          this.handleFilter();\r\n          this.$message({\r\n            message: '删除成功',\r\n            type: 'success'\r\n          });\r\n        }).catch(() => {\r\n          this.buttonLoading = false\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleAllRead() { // 批量标记为已读\r\n      if(this.multipleSelection.length === 0){\r\n        this.$message({\r\n          message: '请选择需要操作的内容',\r\n          type: 'error'\r\n        });\r\n        return false\r\n      }\r\n      this.buttonLoading = true\r\n      read(this.multipleSelection).then(response => {\r\n        this.buttonLoading = false;\r\n        this.getList();\r\n        this.$message({\r\n          message: '标记成功',\r\n          type: 'success'\r\n        });\r\n      }).catch(() => {\r\n        this.buttonLoading = false\r\n      })\r\n    },\r\n    sortChange(data) {\r\n      const { prop, order } = data;\r\n      if (order === 'ascending') {\r\n        this.listQuery.sort = '+' + prop\r\n      } else if(order === 'descending') {\r\n        this.listQuery.sort = '-' + prop\r\n      }else{\r\n        this.listQuery.sort = null\r\n      }\r\n      this.handleFilter()\r\n    },\r\n    handleFilter() {\r\n      this.listQuery.page = 1;\r\n      this.getList()\r\n    },\r\n  }\r\n}\r\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;ACrCA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAbA;AAeA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAnFA;AA3BA;;;;A","sourceRoot":""}
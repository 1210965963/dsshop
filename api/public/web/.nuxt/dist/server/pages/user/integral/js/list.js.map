{"version":3,"file":"pages/user/integral/js/list.js","sources":["webpack:///./api/integralLog.js","webpack:///./pages/user/integral/js/list.js"],"sourcesContent":["import request from '@/plugins/request'\r\nexport function getList(query) {\r\n  return request({\r\n    url: 'integralLog',\r\n    method: 'GET',\r\n    params: query\r\n  })\r\n}","import {getList} from '@/api/integralLog'\r\nexport default {\r\n  layout: 'user',\r\n  head () {\r\n    return {\r\n      title: '积分明细-个人中心',\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      listQuery: {\r\n        page: 1,\r\n        limit: 10,\r\n        sort: '-id',\r\n        type: '',\r\n        timeInterval: ''\r\n      },\r\n      loading: false,\r\n      total: 0,\r\n      income: 0,\r\n      expend: 0,\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: \"最近一周\",\r\n          onClick(picker) {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n            picker.$emit('pick', [start, end])\r\n          }\r\n        }, {\r\n          text: \"最近一个月\",\r\n          onClick(picker) {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n            picker.$emit('pick', [start, end])\r\n          }\r\n        }, {\r\n          text: \"最近三个月\",\r\n          onClick(picker) {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n            picker.$emit('pick', [start, end])\r\n          }\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    async getList(){\r\n      this.loading = true;\r\n      getList(this.listQuery).then(response => {\r\n        this.list = response.paginate.data\r\n        this.total = response.paginate.total\r\n        this.income = response.income\r\n        this.expend = response.expend\r\n      }).finally(()=>{\r\n        this.loading = false\r\n      })\r\n    },\r\n    handleFilter() {\r\n      this.getList()\r\n    },\r\n    sortChange(data) {\r\n      const { prop, order } = data;\r\n      if (order === 'ascending') {\r\n        this.listQuery.sort = '+' + prop\r\n      } else if(order === 'descending') {\r\n        this.listQuery.sort = '-' + prop\r\n      }else{\r\n        this.listQuery.sort = null\r\n      }\r\n      this.handleFilter()\r\n    },\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;ACPA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAjBA;AAbA;AAyCA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA1BA;AArDA;;;;A","sourceRoot":""}